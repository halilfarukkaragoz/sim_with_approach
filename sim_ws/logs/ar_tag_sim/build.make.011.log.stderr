[01m[K/home/halil/Documents/sim_ws/src/ar_tag_sim/src/axis_corrector.cpp:[m[K In function â€˜[01m[Kvoid vis_marker_correct(const ConstPtr&)[m[Kâ€™:
[01m[K/home/halil/Documents/sim_ws/src/ar_tag_sim/src/axis_corrector.cpp:16:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Ktf::Matrix3x3::Matrix3x3(geometry_msgs::Quaternion&)[m[Kâ€™
     tf::Matrix3x3 mat(q[01;31m[K)[m[K;
                        [01;31m[K^[m[K
In file included from [01m[K/opt/ros/melodic/include/tf/LinearMath/Transform.h:21:0[m[K,
                 from [01m[K/opt/ros/melodic/include/tf/transform_datatypes.h:41[m[K,
                 from [01m[K/opt/ros/melodic/include/tf/time_cache.h:38[m[K,
                 from [01m[K/opt/ros/melodic/include/tf/tf.h:44[m[K,
                 from [01m[K/home/halil/Documents/sim_ws/src/ar_tag_sim/src/axis_corrector.cpp:2[m[K:
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:63:22:[m[K [01;36m[Knote: [m[Kcandidate: tf::Matrix3x3::Matrix3x3(const tf::Matrix3x3&)
  TFSIMD_FORCE_INLINE [01;36m[KMatrix3x3[m[K (const Matrix3x3& other)
                      [01;36m[K^~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:63:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kgeometry_msgs::Quaternion {aka geometry_msgs::Quaternion_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kconst tf::Matrix3x3&[m[Kâ€™
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:54:2:[m[K [01;36m[Knote: [m[Kcandidate: tf::Matrix3x3::Matrix3x3(const tfScalar&, const tfScalar&, const tfScalar&, const tfScalar&, const tfScalar&, const tfScalar&, const tfScalar&, const tfScalar&, const tfScalar&)
  [01;36m[KMatrix3x3[m[K(const tfScalar& xx, const tfScalar& xy, const tfScalar& xz,
  [01;36m[K^~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:54:2:[m[K [01;36m[Knote: [m[K  candidate expects 9 arguments, 1 provided
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:45:11:[m[K [01;36m[Knote: [m[Kcandidate: tf::Matrix3x3::Matrix3x3(const tf::Quaternion&)
  explicit [01;36m[KMatrix3x3[m[K(const Quaternion& q) { setRotation(q); }
           [01;36m[K^~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:45:11:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kgeometry_msgs::Quaternion {aka geometry_msgs::Quaternion_<std::allocator<void> >}[m[Kâ€™ to â€˜[01m[Kconst tf::Quaternion&[m[Kâ€™
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:40:2:[m[K [01;36m[Knote: [m[Kcandidate: tf::Matrix3x3::Matrix3x3()
  [01;36m[KMatrix3x3[m[K () {}
  [01;36m[K^~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:40:2:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[K/home/halil/Documents/sim_ws/src/ar_tag_sim/src/axis_corrector.cpp:17:40:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Ktf::Matrix3x3::getEulerYPR(tfScalar*, tfScalar*, tfScalar*)[m[Kâ€™
     mat.getEulerYPR(&yaw, &pitch, &roll[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[K/opt/ros/melodic/include/tf/LinearMath/Transform.h:21:0[m[K,
                 from [01m[K/opt/ros/melodic/include/tf/transform_datatypes.h:41[m[K,
                 from [01m[K/opt/ros/melodic/include/tf/time_cache.h:38[m[K,
                 from [01m[K/opt/ros/melodic/include/tf/tf.h:44[m[K,
                 from [01m[K/home/halil/Documents/sim_ws/src/ar_tag_sim/src/axis_corrector.cpp:2[m[K:
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:294:7:[m[K [01;36m[Knote: [m[Kcandidate: void tf::Matrix3x3::getEulerYPR(tfScalar&, tfScalar&, tfScalar&, unsigned int) const
  void [01;36m[KgetEulerYPR[m[K(tfScalar& yaw, tfScalar& pitch, tfScalar& roll, unsigned int solution_number = 1) const
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/opt/ros/melodic/include/tf/LinearMath/Matrix3x3.h:294:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KtfScalar* {aka double*}[m[Kâ€™ to â€˜[01m[KtfScalar& {aka double&}[m[Kâ€™
make[2]: *** [CMakeFiles/axis_corrector.dir/src/axis_corrector.cpp.o] Error 1
make[1]: *** [CMakeFiles/axis_corrector.dir/all] Error 2
make: *** [all] Error 2
